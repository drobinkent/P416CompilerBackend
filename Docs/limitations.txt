1) our scheme can not handle extern
2) if ther is a read modify write then it can not handle in one stage. hence it willl create a loop and such scheme is not supported in our sustem. to handle
this we need to support tnaregister extern.
3) if in same action two stateful memory is accessed then our scheme can not work. we need to fix this in iterativelyPreprocessMATAccessingStatefuleMemmories function
4)  # An action has an op and parameters. Whereas a conditional expression has type = expression, op is a conditioanl op and values are left and right. which are the parameters.
               # So currently we are assuming ou r hardware can support a> a+b or a+b > c format expression.
               # so we will use a static methord here which will convert a conditional to
               # predicate then write a field format.
               # but in future there will be a a new preprocessor function that will actually pre process the action primitives and do them as
5) In the convertToAction we have to add support for what type of atom for nested conditionals the hardware support. If a hardware support different kind of operations we can
add them in this method

6) currently we are not supporting indirect meters. because indirect meters can be accessed in same way as stateful memoery, we need to anlyze them similar to stateful memories.
on the other hand direct meters, are only accessed through table entires. so we do not need to analyze them seratately.




------------------------- Note------------------------

1) at first we have to assign correct levels to the MAt nodes. then we can skip the less stirct dependencies between nodes. But If we drop the less strict dependencies earlier
and calculate the levels later then, it will cause trouble. Because it is foundamental change in graph.

2) Assume 2 actions . first action access threee stateful memory m-1, m-2 and m-3  in this order . and another action  access these stateful memoeries in the order m-3, m-1 and m-2.
Now. if if they are not embedded in same stage then, they an not be correctly embedded on a RMT hardware. Moreover, if there are some other stage in betwenn then it is impossbiel.
Because that will cause loop in the TDG. In out scheme we assume that, the loop checking is already done. we do not handle these kind of loops.


3) in an action, we are assuming that all action will use all rutime_data (action parameters passed by the CP), which is not true always. So basically we are over
estinating. Need it to be fixed.